{"version":3,"file":"static/js/423.a102e224.chunk.js","mappings":"mRAEMA,EAAM,mCAOCC,EAAM,WACjB,OAAOC,EAAAA,EAAAA,IAAA,gEACyDF,IAC7DG,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAD,MAAK,SAAAE,GACJ,OAAOA,EAAKA,KAAKC,OAClB,GACJ,EAEYC,EAAQ,SAAAC,GACnB,OAAON,EAAAA,EAAAA,IAAA,6CAEmCM,EAFnC,oBAEiDR,EAFjD,oBAIJG,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAD,MAAK,SAAAE,GACJ,OAAOA,EAAKA,IACb,GACJ,EAEYI,EAAW,SAAAD,GACtB,OAAON,EAAAA,EAAAA,IAAA,6CAEmCM,EAFnC,4BAEyDR,EAFzD,qBAIJG,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAD,MAAK,SAAAE,GAEJ,OAAOA,EAAKA,IACb,GACJ,EAEYK,EAAa,SAAAF,GACxB,OAAON,EAAAA,EAAAA,IAAA,6CAEmCM,EAFnC,4BAEyDR,EAFzD,2BAIJG,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAD,MAAK,SAAAE,GACJ,OAAOA,EAAKA,IACb,GACJ,EAEYM,EAAU,SAAAC,GACrB,OAAOV,EAAAA,EAAAA,IAAA,4DAEkDF,EAFlD,4DAEyGY,IAE7GT,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAD,MAAK,SAAAE,GACJ,OAAOA,EAAKA,IACb,GACJ,C,yGClEKQ,EAAWC,EAAAA,GAAAA,GAAH,6CA0Dd,UAtDkB,WAChB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOV,EAAP,KAAaa,EAAb,KACA,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAWF,EAAOG,IAAI,eACtBC,GAAWC,EAAAA,EAAAA,MAkBjB,OAPAC,EAAAA,EAAAA,YAAU,WACHJ,IACLX,EAAAA,EAAAA,IAAQW,GAAUnB,MAAK,SAAAE,GACrBa,EAAQb,EAAKC,QACd,GACF,GAAE,CAACgB,KAGF,iCACE,kBAAMK,SAlBO,SAAAC,GACfA,EAAMC,iBACNR,EAAU,CAAES,YAAad,GAC1B,EAeG,WACE,kBACEe,KAAK,OACLnB,KAAK,QACLI,MAAOA,EACPgB,SAlBS,SAAAJ,GACfX,EAASW,EAAMK,OAAOjB,MACvB,EAiBOkB,UAAQ,KAEV,mBAAQH,KAAK,SAAb,wBAGF,wBACG1B,EAAK8B,KAAI,SAAAC,GACR,OACE,SAACvB,EAAD,WACE,SAAC,KAAD,CACEwB,GAAE,UAAKD,EAAG5B,IACV8B,MAAO,CAAEd,SAAUA,EAASe,SAAWf,EAASgB,QAFlD,SAIGJ,EAAGK,kBALOL,EAAG5B,GASrB,QAIR,C","sources":["Api/Api.js","components/SearcBar.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'a087ec88dfb73069c17edb46f5fa13b0';\n\n// `https://api.themoviedb.org/3/movie/661374?api_key=a087ec88dfb73069c17edb46f5fa13b0&language=en-US\n// `;\n\n// `https://api.themoviedb.org/3/movie/{661374}/images?api_key=a087ec88dfb73069c17edb46f5fa13b0&language=en-US`\n\nexport const Api = () => {\n  return axios\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n    .then(response => {\n      return response;\n    })\n    .then(data => {\n      return data.data.results;\n    });\n};\n\nexport const ApiId = id => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n    )\n    .then(response => {\n      return response;\n    })\n    .then(data => {\n      return data.data;\n    });\n};\n\nexport const ApiCasts = id => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-USS`\n    )\n    .then(response => {\n      return response;\n    })\n    .then(data => {\n      // console.log(data);\n      return data.data;\n    });\n};\n\nexport const ApiReviews = id => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    )\n    .then(response => {\n      return response;\n    })\n    .then(data => {\n      return data.data;\n    });\n};\n\nexport const ApiName = name => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n    )\n    .then(response => {\n      return response;\n    })\n    .then(data => {\n      return data.data;\n    });\n};\n","import { ApiName } from 'Api/Api';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLi = styled.li`\n  list-style: none;\n`;\n\nconst SearchBar = () => {\n  const [value, setValue] = useState('');\n  const [data, setData] = useState([]);\n  const [params, setParams] = useSearchParams();\n  const parametr = params.get('searchQuery');\n  const location = useLocation();\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setParams({ searchQuery: value });\n  };\n\n  const onChange = event => {\n    setValue(event.target.value);\n  };\n\n  useEffect(() => {\n    if (!parametr) return;\n    ApiName(parametr).then(data => {\n      setData(data.results);\n    });\n  }, [parametr]);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          value={value}\n          onChange={onChange}\n          required\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <ul>\n        {data.map(el => {\n          return (\n            <StyledLi key={el.id}>\n              <Link\n                to={`${el.id}`}\n                state={{ location: location.pathname + location.search }}\n              >\n                {el.original_title}\n              </Link>\n            </StyledLi>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default SearchBar;\n"],"names":["KEY","Api","axios","then","response","data","results","ApiId","id","ApiCasts","ApiReviews","ApiName","name","StyledLi","styled","useState","value","setValue","setData","useSearchParams","params","setParams","parametr","get","location","useLocation","useEffect","onSubmit","event","preventDefault","searchQuery","type","onChange","target","required","map","el","to","state","pathname","search","original_title"],"sourceRoot":""}